##########################
#  Makefile Automatico   #
#    (versione bash)     #
# Made by Alberto Lazari #
##########################

# vvv Parametri del progetto e per la compilazione editabili vvv
#################################################################

# Cartelle dei sorgenti (SRC) e dei file .obj e .dep (BUILD)
# Se non esistenti le cartelle verranno create
SRC := src
BUILD := build

# Cartelle in cui cercare i file header, separate da uno spazio
INCLUDEPATHS := include

# Inserire il nome dell'eseguibile prodotto (di default è uguale al nome della cartella del progetto)
EXECUTABLE := $(BUILD)/$(shell basename "$$("pwd")")

# Estensione dei file
SRCEXT := .cpp
OBJEXT := .obj
DEPEXT := .dep

# Parametri per la compilazione
CXX := g++
CXXFLAGS := -std=c++11 -Wall -I $(INCLUDEPATHS) -g

#######################################
# Da qui in poi è tutto automatico... #
#######################################

SOURCES := $(wildcard $(SRC)/*$(SRCEXT))
OBJECTS := $(patsubst $(SRC)/%$(SRCEXT), $(BUILD)/%$(OBJEXT), $(SOURCES))
OBJ := $(patsubst $(BUILD)/%$(OBJEXT),%$(OBJEXT), $(OBJECTS))
DEPENDENCIES := $(patsubst $(SRC)/%$(SRCEXT), $(BUILD)/%$(DEPEXT), $(SOURCES))

# Targets:
build: $(EXECUTABLE).exe
	@echo "========== compiled successfully =========="

$(EXECUTABLE).exe: $(OBJECTS)
	@$(CXX) $(CXXFLAGS) $(OBJECTS) -o $(EXECUTABLE)

run: build
	@echo "$(patsubst $(BUILD)/%,"%", $(EXECUTABLE))>"
	@echo ""
	@./$(EXECUTABLE)

# Include i file .dep nelle dipendenze del rispettivo file .obj
-include $(DEPENDENCIES)

$(OBJECTS): $(BUILD)/%$(OBJEXT): $(SRC)/%$(SRCEXT)
#	Crea le cartelle necessarie, se non esistenti
	@test -d $(SRC) || mkdir $(SRC) > /dev/null
	@test -d $(BUILD) || mkdir $(BUILD) > /dev/null

	@echo "building $(patsubst $(BUILD)/%$(OBJEXT), %$(OBJEXT), $@)..."
	@$(CXX) $(CXXFLAGS) -fno-implicit-templates -MMD -MF \
		$(patsubst $(BUILD)/%$(OBJEXT), $(BUILD)/%$(DEPEXT), $@) -c $< -o $@

$(OBJ): %$(OBJEXT): $(BUILD)/%$(OBJEXT)

clean_obj:
	@rm $(OBJECTS) 2> /dev/null || true

clean_dep:
	@rm $(DEPENDENCIES) 2> /dev/null || true

clean:
	@rm $(OBJECTS) 2> /dev/null || true
	@rm $(DEPENDENCIES) 2> /dev/null || true
	@rm "$(EXECUTABLE)" 2> /dev/null || true
	@echo "build directory cleaned"
